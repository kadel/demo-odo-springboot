schemaVersion: 2.2.0
metadata:
  name: demo
variables:
  APP_IMAGE: quay.io/tkral/devbox-demo-app
  DEV_IMAGE: quay.io/tkral/devbox-demo-devbox

components:

- container:
    endpoints:
    - name: 8080-tcp
      targetPort: 8080
    env:
    - name: DEBUG_PORT
      value: "5858"
    image: ${DEV_IMAGE}
    mountSources: true
  name: tools

- name: dev-image
  image:
    imageName: "{{DEV_IMAGE}}"
    dockerfile:
      uri: ./devcontainer/Dockerfile
      buildContext: ${PROJECT_SOURCE}

- name: app-image
  image:
    imageName: "{{APP_IMAGE}}"
    dockerfile:
      uri: ./src/main/docker/Dockerfile
      buildContext: ${PROJECT_SOURCE}

- name: resource-app
  kubernetes:
    uri: config/default/app.yaml

- name: resource-pvc
  kubernetes:
    uri: config/default/pvc.yaml

- name: resource-service
  kubernetes:
    uri: config/default/service.yaml

- name: resource-route
  kubernetes:
    uri: config/local/route.yaml

commands:

- exec:
    commandLine: mvn package -Dmaven.test.skip=true
    component: tools
    group:
      isDefault: true
      kind: build
    workingDir: ${PROJECT_SOURCE}
  id: build

- exec:
    commandLine: mvn spring-boot:run -Dspring-boot.run.profiles=postgres
    component: tools
    hotReloadCapable: true
    group:
      isDefault: true
      kind: run
    workingDir: ${PROJECT_SOURCE}
  id: run

- exec:
    commandLine: java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=${DEBUG_PORT},suspend=n
      -jar target/*.jar
    component: tools
    group:
      isDefault: true
      kind: debug
    workingDir: ${PROJECT_SOURCE}
  id: debug

- exec:
    commandLine: helm repo add bitnami https://charts.bitnami.com/bitnami && helm install my-db bitnami/postgresql
    component: tools
  id: deploy-db

- apply:
    component: resource-app
  id: deploy-app

- apply:
    component: resource-pvc
  id: deploy-pvc

- apply:
    component: resource-service
  id: deploy-service

- apply:
    component: resource-route
  id: deploy-route

- apply:
    component: app-image
  id: app-image

- composite:
    commands:
      - app-image
      - deploy-pvc
      - deploy-service
      - deploy-route
      - deploy-app
      - deploy-db
    group:
      isDefault: true
      kind: deploy
  id: deploy

